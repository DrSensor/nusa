use(require("knit"))

local edition = " --edition 2021"

local rustc = (cli.lint and "clippy-driver" or "rustc") .. edition

local target = "--target wasm32-unknown-unknown"
  .." --crate-type cdylib"
  .." -C linker-flavor=wasm-ld" -- or `em` for Emscripten `emcc`

local ld = '-C link-args="' -- https://lld.llvm.org/WebAssembly.html
  .." --import-memory"
  .." --import-table"
  .." --initial-memory=65536" -- 1 page = 64KiB
  .." -z stack-size=0" -- https://github.com/rustwasm/wasm-bindgen/issues/1345#issuecomment-472872310
  ..'"' -- https://sourceware.org/binutils/docs/ld/Options.html

-- see `rustc --target wasm32-unknown-unknown --print target-features`
local feat = "-C target-feature="
  .."+bulk-memory,"
  .."+multivalue,"
  .."+mutable-globals,"
  .."+reference-types,"
  .."+simd128,"

local opt = "-C opt-level=s"
  ..f" -C debuginfo=$(cli.debug or 0)"
  ..f" -C strip=$(cli.debug == '2' and 'none' or cli.debug == '1' and 'debuginfo' or 'symbols')"
  .." -C no-redzone"
  .." -C overflow-checks=off"
  .." -C relocation-model=pic"

local src = glob("*.rs")
local manifest = include("Cargo.knit")

return b{
  $ %.wasm: %.rs
    $rustc $target $opt $feat $ld $input -o $output

  $ Cargo.toml: $src
    echo '$(manifest(inputs))' > $output
}
