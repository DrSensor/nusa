use(require("knit"))
use(table)
addpath(".")

local source = {
  rs = glob("*.rs"),
  s = glob("mem/*.s"),
}

local target = { arch = "wasm32", sys = "unknown" }

local features = {
  "bulk-memory",
  "multivalue",
  "mutable-globals",
  "reference-types",
  "simd128",
  "relaxed-simd",
  "atomics",
  "sign-ext",
  "nontrapping-fptoint",
  "extended-const",
  "exception-handling",
  "tail-call",
}

local ld := wasm-ld
local as := llvm-mc
local rustc = (cli.lint and "clippy-driver" or "rustc")
rustc := $rustc --edition 2021

target.triple = f"$(target.arch)-unknown-$(target.sys)"
cli.debug = tonumber(cli.debug) or 0

-- https://llvm.org/docs/CommandGuide/llvm-mc.html
as := $as -triple=$(target.triple)
as := $as -mattr=$(concat(features, ","))
--

-- https://doc.rust-lang.org/rustc/command-line-arguments.html
rustc := $rustc --crate-type cdylib --target $(target.triple)
rustc := $rustc -C target-feature=$(concat(prefix(features, "+"), ","))
rustc := $rustc -C opt-level=z -C panic=abort -C no-redzone -C overflow-checks=off

rustc := $rustc -C strip=$(cli.debug == 2 and "none" or cli.debug == 1 and "debuginfo" or "symbols")
rustc := $rustc -C debuginfo=$(cli.debug or 0)
-- https://doc.rust-lang.org/rustc/codegen-options

-- https://lld.llvm.org/WebAssembly
ld := $ld --no-entry --export-dynamic --allow-undefined
ld := $ld --import-memory --initial-memory=65536 -z stack-size=0
ld := $ld --features=$(concat(features, ","))
if cli.debug < 2 then
  ld := $ld --strip-$(cli.debug == 1 and "debug" or "all")
end
if cli.debug > 0 then
  ld := $ld -O2
end
-- https://sourceware.org/binutils/docs/ld/Options.html

local obj = { s = extrepl(source.s, ".s", ".o") }
local wat = { rs = extrepl(source.rs, ".rs", ".wat") }

return b{
  $ build:V: $(wat.rs)

  $ %.wasm: $(obj.s) %.o
    $ld $input -o $output

  $ %.o: %.rs
    $rustc --emit=obj $input -o $output

  $ %.o: %.s
    $as -filetype=obj $input -o $output

  $ %.wat: %.wasm
    wasm2wat $input -o $output --enable-all

  $ Cargo.toml: $(source.rs)
    echo '$(require("Cargo")(inputs))' > $output
}
