use(require("knit"))
addpath(".")

local source = {
  rs = glob("core/wasm/*/*.rs"),
  ts = glob("core/wasm/*/*.ts"),
  s = glob("core/wasm/*/*.s"),
  wat = glob("core/wasm/*/*.s.wat"),
  pom = glob("core/regex/*.pom"),
}

-- regex
local regex = { js = extrepl(source.pom, ".pom", ".js") }
--

-- wasm
local ffi = { rs = extrepl(source.s, ".s", ".rs") }
local types = { rs = glob("core/wasm/types/*.rs") }

local wasm = {
  rs = extrepl(filterout(filterout(source.rs, ffi.rs), types.rs), ".rs", ".wasm"),
  ts = extrepl(source.ts, ".ts", ".wasm"),
}
local wat = {
  rs = extrepl(wasm.rs, ".rs", ".wat"),
  ts = extrepl(wasm.ts, ".ts", ".wat"),
}
--

return b{
  $ all:V: all-js all-wasm
  $ manifest:V: rust-project.json Cargo.toml

  $ %.br: %
    brotli $input

  include("core/regex/Knitfile"),
  $ all-js:V: $(regex.js)

  include("core/wasm/Knitfile"),
  $ all-wasm:V: $(wasm.rs) $(wasm.ts)
  $ all-wat:V: $(wat.rs) $(wat.ts)

  $ rust-project.json: $(source.rs)
    echo '$(require("rust-project")(inputs))' > $output

  $ Cargo.toml: $(wasm.rs)
    echo '$(require("Cargo")(inputs))' > $output
}
